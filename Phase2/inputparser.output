Terminals unused in grammar

   number_error
<<<<<<< HEAD
=======
   square_bracket_left
   square_bracket_right
   curly_brace_left
   curly_brace_right
   parenthesis_left
   parenthesis_right
   semicolon
   comma
   colon
   dot
   plus_assign
   minus_assign
   multiply_assign
   divide_assign
   question_mark
   modulo
   division
   multiply
   minus
   plus
   assignment
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
   Fake_id
   WhiteSpace


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funDeclaration
    6            | recDeclaration

    7 recDeclaration: RECORD ID curly_brace_left localDeclarations curly_brace_right

    8 varDeclaration: typeSpecifier varDeclList semicolon

    9 scopedVarDeclaration: scopedTypeSpecifier varDeclList semicolon

   10 varDeclList: varDeclList comma varDeclInitialize
   11            | varDeclInitialize

   12 varDeclInitialize: varDeclId
   13                  | varDeclId colon simpleExpression

   14 varDeclId: ID
   15          | ID square_bracket_left NUMCONST square_bracket_right

   16 scopedTypeSpecifier: Static typeSpecifier
   17                    | typeSpecifier

   18 typeSpecifier: returnTypeSpecifier

   19 returnTypeSpecifier: INT
   20                    | REAL
   21                    | BOOL
   22                    | CHAR

<<<<<<< HEAD
   23 funDeclaration: typeSpecifier ID parenthesis_left params parenthesis_right statement
   24               | ID parenthesis_left params parenthesis_right statement
=======
   23 funDeclaration: typeSpecifier ID '(' params ')' statement
   24               | ID '(' params ')' statement
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

   25 params: paramList
   26       | /* empty */

<<<<<<< HEAD
   27 paramList: paramList semicolon paramTypeList
=======
   27 paramList: paramList ';' paramTypeList
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
   28          | paramTypeList

   29 paramTypeList: typeSpecifier paramIdList

<<<<<<< HEAD
   30 paramIdList: paramIdList comma paramId
   31            | paramId

   32 paramId: ID
   33        | ID square_bracket_left square_bracket_right
=======
   30 paramIdList: paramIdList ',' paramId
   31            | paramId

   32 paramId: ID
   33        | ID '[' ']'
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

   34 statement: expressionStmt
   35          | compoundStmt
   36          | selectionStmt
   37          | iterationStmt
   38          | returnStmt
   39          | breakStmt

<<<<<<< HEAD
   40 compoundStmt: curly_brace_left localDeclarations statementList curly_brace_right
=======
   40 compoundStmt: '{' localDeclarations statementList '}'
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

   41 localDeclarations: localDeclarations scopedVarDeclaration
   42                  | /* empty */

   43 statementList: statementList statement
   44              | /* empty */

<<<<<<< HEAD
   45 expressionStmt: expression semicolon
   46               | semicolon

   47 selectionStmt: IF parenthesis_left simpleExpression parenthesis_right statement
   48              | IF parenthesis_left simpleExpression parenthesis_right statement ELSE statement
   49              | SWITCH parenthesis_left simpleExpression parenthesis_right caseElement defaultElement END

   50 caseElement: CASE NUMCONST colon statement semicolon
   51            | caseElement CASE NUMCONST colon statement semicolon

   52 defaultElement: DEFAULT colon statement semicolon
   53               | /* empty */

   54 iterationStmt: WHILE parenthesis_left simpleExpression parenthesis_right statement

   55 returnStmt: RETURN semicolon
   56           | RETURN expression semicolon

   57 breakStmt: BREAK semicolon

   58 expression: mutable assignment expression
   59           | mutable plus_assign expression
   60           | mutable minus_assign expression
   61           | mutable multiply_assign expression
   62           | mutable divide_assign expression
=======
   45 expressionStmt: expression ';'
   46               | ';'

   47 selectionStmt: IF '(' simpleExpression ')' statement
   48              | IF '(' simpleExpression ')' statement ELSE statement
   49              | SWITCH '(' simpleExpression ')' caseElement defaultElement END

   50 caseElement: CASE NUMCONST ':' statement ';'
   51            | caseElement CASE NUMCONST ':' statement ';'

   52 defaultElement: DEFAULT ':' statement ';'
   53               | /* empty */

   54 iterationStmt: WHILE '(' simpleExpression ')' statement

   55 returnStmt: RETURN ';'
   56           | RETURN expression ';'

   57 breakStmt: BREAK ';'

   58 expression: mutable '=' expression
   59           | mutable "+=" expression
   60           | mutable "-=" expression
   61           | mutable "*=" expression
   62           | mutable "/=" expression
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
   63           | mutable "++"
   64           | mutable "--"
   65           | simpleExpression

   66 simpleExpression: simpleExpression OR simpleExpression
   67                 | simpleExpression AND simpleExpression
   68                 | simpleExpression OR_ELSE simpleExpression
   69                 | simpleExpression AND_THEN simpleExpression
   70                 | NOT simpleExpression
   71                 | relExpression

   72 relExpression: mathlogicExpression relop mathlogicExpression
   73              | mathlogicExpression

   74 relop: less_equal
   75      | less_than
   76      | greater_than
   77      | greater_equal
   78      | equal
   79      | not_equal

<<<<<<< HEAD
   80 mathlogicExpression: mathlogicExpression plus mathlogicExpression
   81                    | mathlogicExpression minus mathlogicExpression
   82                    | mathlogicExpression multiply mathlogicExpression
   83                    | mathlogicExpression division mathlogicExpression
   84                    | mathlogicExpression modulo mathlogicExpression
=======
   80 mathlogicExpression: mathlogicExpression '+' mathlogicExpression
   81                    | mathlogicExpression '-' mathlogicExpression
   82                    | mathlogicExpression '*' mathlogicExpression
   83                    | mathlogicExpression '/' mathlogicExpression
   84                    | mathlogicExpression '%' mathlogicExpression
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
   85                    | unaryExpression

   86 unaryExpression: unaryop unaryExpression
   87                | factor

<<<<<<< HEAD
   88 unaryop: minus
   89        | multiply
   90        | question_mark
=======
   88 unaryop: '-'
   89        | '*'
   90        | '?'
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

   91 factor: immutable
   92       | mutable

   93 mutable: ID
<<<<<<< HEAD
   94        | mutable square_bracket_left expression square_bracket_right
   95        | mutable dot ID

   96 immutable: parenthesis_left expression parenthesis_right
   97          | call
   98          | constant

   99 call: ID parenthesis_left args parenthesis_right
=======
   94        | mutable '[' expression ']'
   95        | mutable '.' ID

   96 immutable: '(' expression ')'
   97          | call
   98          | constant

   99 call: ID '(' args ')'
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

  100 args: argList
  101     | /* empty */

<<<<<<< HEAD
  102 argList: argList comma expression
=======
  102 argList: argList ',' expression
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
  103        | expression

  104 constant: NUMCONST
  105         | Real_const
  106         | CHARCONST
  107         | BoolConst


Terminals, with rules where they appear

$end (0) 0
<<<<<<< HEAD
=======
'%' (37) 84
'(' (40) 23 24 47 48 49 54 96 99
')' (41) 23 24 47 48 49 54 96 99
'*' (42) 82 89
'+' (43) 80
',' (44) 10 30 102
'-' (45) 81 88
'.' (46) 95
'/' (47) 83
':' (58) 13 50 51 52
';' (59) 8 9 27 45 46 50 51 52 55 56 57
'=' (61) 58
'?' (63) 90
'[' (91) 15 33 94
']' (93) 15 33 94
'{' (123) 7 40
'}' (125) 7 40
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
error (256)
Real_const (258) 105
number_error (259)
BoolConst (260) 107
greater_than (261) 76
greater_equal (262) 77
not_equal (263) 79
equal (264) 78
less_equal (265) 74
less_than (266) 75
<<<<<<< HEAD
square_bracket_left (267) 15 33 94
square_bracket_right (268) 15 33 94
curly_brace_left (269) 7 40
curly_brace_right (270) 7 40
parenthesis_left (271) 23 24 47 48 49 54 96 99
parenthesis_right (272) 23 24 47 48 49 54 96 99
semicolon (273) 8 9 27 45 46 50 51 52 55 56 57
comma (274) 10 30 102
colon (275) 13 50 51 52
dot (276) 95
=======
square_bracket_left (267)
square_bracket_right (268)
curly_brace_left (269)
curly_brace_right (270)
parenthesis_left (271)
parenthesis_right (272)
semicolon (273)
comma (274)
colon (275)
dot (276)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
AND_THEN (277) 69
OR_ELSE (278) 68
OR (279) 66
AND (280) 67
NOT (281) 70
IF (282) 47 48
ELSE (283) 48
SWITCH (284) 49
END (285) 49
CASE (286) 50 51
DEFAULT (287) 52
WHILE (288) 54
RETURN (289) 55 56
BREAK (290) 57
RECORD (291) 7
Static (292) 16
INT (293) 19
REAL (294) 20
BOOL (295) 21
CHAR (296) 22
<<<<<<< HEAD
plus_assign (297) 59
minus_assign (298) 60
multiply_assign (299) 61
divide_assign (300) 62
question_mark (301) 90
modulo (302) 84
division (303) 83
multiply (304) 82 89
minus (305) 81 88
plus (306) 80
assignment (307) 58
=======
plus_assign (297)
minus_assign (298)
multiply_assign (299)
divide_assign (300)
question_mark (301)
modulo (302)
division (303)
multiply (304)
minus (305)
plus (306)
assignment (307)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
NUMCONST (308) 15 50 51 104
ID (309) 7 14 15 23 24 32 33 93 95 99
Fake_id (310)
WhiteSpace (311)
CHARCONST (312) 106
THEN (313)
<<<<<<< HEAD
"++" (314) 63
"--" (315) 64
=======
"+=" (314) 59
"-=" (315) 60
"*=" (316) 61
"/=" (317) 62
"++" (318) 63
"--" (319) 64
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


Nonterminals, with rules where they appear

<<<<<<< HEAD
$accept (61)
    on left: 0
program (62)
    on left: 1, on right: 0
declarationList (63)
    on left: 2 3, on right: 1 2
declaration (64)
    on left: 4 5 6, on right: 2 3
recDeclaration (65)
    on left: 7, on right: 6
varDeclaration (66)
    on left: 8, on right: 4
scopedVarDeclaration (67)
    on left: 9, on right: 41
varDeclList (68)
    on left: 10 11, on right: 8 9 10
varDeclInitialize (69)
    on left: 12 13, on right: 10 11
varDeclId (70)
    on left: 14 15, on right: 12 13
scopedTypeSpecifier (71)
    on left: 16 17, on right: 9
typeSpecifier (72)
    on left: 18, on right: 8 16 17 23 29
returnTypeSpecifier (73)
    on left: 19 20 21 22, on right: 18
funDeclaration (74)
    on left: 23 24, on right: 5
params (75)
    on left: 25 26, on right: 23 24
paramList (76)
    on left: 27 28, on right: 25 27
paramTypeList (77)
    on left: 29, on right: 27 28
paramIdList (78)
    on left: 30 31, on right: 29 30
paramId (79)
    on left: 32 33, on right: 30 31
statement (80)
    on left: 34 35 36 37 38 39, on right: 23 24 43 47 48 50 51 52 54
compoundStmt (81)
    on left: 40, on right: 35
localDeclarations (82)
    on left: 41 42, on right: 7 40 41
statementList (83)
    on left: 43 44, on right: 40 43
expressionStmt (84)
    on left: 45 46, on right: 34
selectionStmt (85)
    on left: 47 48 49, on right: 36
caseElement (86)
    on left: 50 51, on right: 49 51
defaultElement (87)
    on left: 52 53, on right: 49
iterationStmt (88)
    on left: 54, on right: 37
returnStmt (89)
    on left: 55 56, on right: 38
breakStmt (90)
    on left: 57, on right: 39
expression (91)
    on left: 58 59 60 61 62 63 64 65, on right: 45 56 58 59 60 61 62
    94 96 102 103
simpleExpression (92)
    on left: 66 67 68 69 70 71, on right: 13 47 48 49 54 65 66 67 68
    69 70
relExpression (93)
    on left: 72 73, on right: 71
relop (94)
    on left: 74 75 76 77 78 79, on right: 72
mathlogicExpression (95)
    on left: 80 81 82 83 84 85, on right: 72 73 80 81 82 83 84
unaryExpression (96)
    on left: 86 87, on right: 85 86
unaryop (97)
    on left: 88 89 90, on right: 86
factor (98)
    on left: 91 92, on right: 87
mutable (99)
    on left: 93 94 95, on right: 58 59 60 61 62 63 64 92 94 95
immutable (100)
    on left: 96 97 98, on right: 91
call (101)
    on left: 99, on right: 97
args (102)
    on left: 100 101, on right: 99
argList (103)
    on left: 102 103, on right: 100 102
constant (104)
=======
$accept (82)
    on left: 0
program (83)
    on left: 1, on right: 0
declarationList (84)
    on left: 2 3, on right: 1 2
declaration (85)
    on left: 4 5 6, on right: 2 3
recDeclaration (86)
    on left: 7, on right: 6
varDeclaration (87)
    on left: 8, on right: 4
scopedVarDeclaration (88)
    on left: 9, on right: 41
varDeclList (89)
    on left: 10 11, on right: 8 9 10
varDeclInitialize (90)
    on left: 12 13, on right: 10 11
varDeclId (91)
    on left: 14 15, on right: 12 13
scopedTypeSpecifier (92)
    on left: 16 17, on right: 9
typeSpecifier (93)
    on left: 18, on right: 8 16 17 23 29
returnTypeSpecifier (94)
    on left: 19 20 21 22, on right: 18
funDeclaration (95)
    on left: 23 24, on right: 5
params (96)
    on left: 25 26, on right: 23 24
paramList (97)
    on left: 27 28, on right: 25 27
paramTypeList (98)
    on left: 29, on right: 27 28
paramIdList (99)
    on left: 30 31, on right: 29 30
paramId (100)
    on left: 32 33, on right: 30 31
statement (101)
    on left: 34 35 36 37 38 39, on right: 23 24 43 47 48 50 51 52 54
compoundStmt (102)
    on left: 40, on right: 35
localDeclarations (103)
    on left: 41 42, on right: 7 40 41
statementList (104)
    on left: 43 44, on right: 40 43
expressionStmt (105)
    on left: 45 46, on right: 34
selectionStmt (106)
    on left: 47 48 49, on right: 36
caseElement (107)
    on left: 50 51, on right: 49 51
defaultElement (108)
    on left: 52 53, on right: 49
iterationStmt (109)
    on left: 54, on right: 37
returnStmt (110)
    on left: 55 56, on right: 38
breakStmt (111)
    on left: 57, on right: 39
expression (112)
    on left: 58 59 60 61 62 63 64 65, on right: 45 56 58 59 60 61 62
    94 96 102 103
simpleExpression (113)
    on left: 66 67 68 69 70 71, on right: 13 47 48 49 54 65 66 67 68
    69 70
relExpression (114)
    on left: 72 73, on right: 71
relop (115)
    on left: 74 75 76 77 78 79, on right: 72
mathlogicExpression (116)
    on left: 80 81 82 83 84 85, on right: 72 73 80 81 82 83 84
unaryExpression (117)
    on left: 86 87, on right: 85 86
unaryop (118)
    on left: 88 89 90, on right: 86
factor (119)
    on left: 91 92, on right: 87
mutable (120)
    on left: 93 94 95, on right: 58 59 60 61 62 63 64 92 94 95
immutable (121)
    on left: 96 97 98, on right: 91
call (122)
    on left: 99, on right: 97
args (123)
    on left: 100 101, on right: 99
argList (124)
    on left: 102 103, on right: 100 102
constant (125)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    on left: 104 105 106 107, on right: 98


state 0

    0 $accept: . program $end

    RECORD  shift, and go to state 1
    INT     shift, and go to state 2
    REAL    shift, and go to state 3
    BOOL    shift, and go to state 4
    CHAR    shift, and go to state 5
    ID      shift, and go to state 6

    program              go to state 7
    declarationList      go to state 8
    declaration          go to state 9
    recDeclaration       go to state 10
    varDeclaration       go to state 11
    typeSpecifier        go to state 12
    returnTypeSpecifier  go to state 13
    funDeclaration       go to state 14


state 1

    7 recDeclaration: RECORD . ID curly_brace_left localDeclarations curly_brace_right

    ID  shift, and go to state 15


state 2

   19 returnTypeSpecifier: INT .

    $default  reduce using rule 19 (returnTypeSpecifier)


state 3

   20 returnTypeSpecifier: REAL .

    $default  reduce using rule 20 (returnTypeSpecifier)


state 4

   21 returnTypeSpecifier: BOOL .

    $default  reduce using rule 21 (returnTypeSpecifier)


state 5

   22 returnTypeSpecifier: CHAR .

    $default  reduce using rule 22 (returnTypeSpecifier)


state 6

<<<<<<< HEAD
   24 funDeclaration: ID . parenthesis_left params parenthesis_right statement
=======
   24 funDeclaration: ID . '(' params ')' statement
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    parenthesis_left  shift, and go to state 16


state 7

    0 $accept: program . $end

    $end  shift, and go to state 17


state 8

    1 program: declarationList .
    2 declarationList: declarationList . declaration

    RECORD  shift, and go to state 1
    INT     shift, and go to state 2
    REAL    shift, and go to state 3
    BOOL    shift, and go to state 4
    CHAR    shift, and go to state 5
    ID      shift, and go to state 6

    $default  reduce using rule 1 (program)

    declaration          go to state 18
    recDeclaration       go to state 10
    varDeclaration       go to state 11
    typeSpecifier        go to state 12
    returnTypeSpecifier  go to state 13
    funDeclaration       go to state 14


state 9

    3 declarationList: declaration .

    $default  reduce using rule 3 (declarationList)


state 10

    6 declaration: recDeclaration .

    $default  reduce using rule 6 (declaration)


state 11

    4 declaration: varDeclaration .

    $default  reduce using rule 4 (declaration)


state 12

<<<<<<< HEAD
    8 varDeclaration: typeSpecifier . varDeclList semicolon
   23 funDeclaration: typeSpecifier . ID parenthesis_left params parenthesis_right statement
=======
    8 varDeclaration: typeSpecifier . varDeclList ';'
   23 funDeclaration: typeSpecifier . ID '(' params ')' statement
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    ID  shift, and go to state 19

    varDeclList        go to state 20
    varDeclInitialize  go to state 21
    varDeclId          go to state 22


state 13

   18 typeSpecifier: returnTypeSpecifier .

    $default  reduce using rule 18 (typeSpecifier)


state 14

    5 declaration: funDeclaration .

    $default  reduce using rule 5 (declaration)


state 15

    7 recDeclaration: RECORD ID . curly_brace_left localDeclarations curly_brace_right

    curly_brace_left  shift, and go to state 23


state 16

<<<<<<< HEAD
   24 funDeclaration: ID parenthesis_left . params parenthesis_right statement
=======
   24 funDeclaration: ID '(' . params ')' statement
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    INT   shift, and go to state 2
    REAL  shift, and go to state 3
    BOOL  shift, and go to state 4
    CHAR  shift, and go to state 5

    $default  reduce using rule 26 (params)

    typeSpecifier        go to state 24
    returnTypeSpecifier  go to state 13
    params               go to state 25
    paramList            go to state 26
    paramTypeList        go to state 27


state 17

    0 $accept: program $end .

    $default  accept


state 18

    2 declarationList: declarationList declaration .

    $default  reduce using rule 2 (declarationList)


state 19

   14 varDeclId: ID .
<<<<<<< HEAD
   15          | ID . square_bracket_left NUMCONST square_bracket_right
   23 funDeclaration: typeSpecifier ID . parenthesis_left params parenthesis_right statement
=======
   15          | ID . '[' NUMCONST ']'
   23 funDeclaration: typeSpecifier ID . '(' params ')' statement
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    square_bracket_left  shift, and go to state 28
    parenthesis_left     shift, and go to state 29

    $default  reduce using rule 14 (varDeclId)


state 20

    8 varDeclaration: typeSpecifier varDeclList . semicolon
   10 varDeclList: varDeclList . comma varDeclInitialize

    semicolon  shift, and go to state 30
    comma      shift, and go to state 31


state 21

   11 varDeclList: varDeclInitialize .

    $default  reduce using rule 11 (varDeclList)


state 22

   12 varDeclInitialize: varDeclId .
   13                  | varDeclId . colon simpleExpression

    colon  shift, and go to state 32

    $default  reduce using rule 12 (varDeclInitialize)


state 23

    7 recDeclaration: RECORD ID curly_brace_left . localDeclarations curly_brace_right

    $default  reduce using rule 42 (localDeclarations)

    localDeclarations  go to state 33


state 24

   29 paramTypeList: typeSpecifier . paramIdList

    ID  shift, and go to state 34

    paramIdList  go to state 35
    paramId      go to state 36


state 25

<<<<<<< HEAD
   24 funDeclaration: ID parenthesis_left params . parenthesis_right statement
=======
   24 funDeclaration: ID '(' params . ')' statement
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    parenthesis_right  shift, and go to state 37


state 26

   25 params: paramList .
<<<<<<< HEAD
   27 paramList: paramList . semicolon paramTypeList
=======
   27 paramList: paramList . ';' paramTypeList
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    semicolon  shift, and go to state 38

    $default  reduce using rule 25 (params)


state 27

   28 paramList: paramTypeList .

    $default  reduce using rule 28 (paramList)


state 28

   15 varDeclId: ID square_bracket_left . NUMCONST square_bracket_right

    NUMCONST  shift, and go to state 39


state 29

<<<<<<< HEAD
   23 funDeclaration: typeSpecifier ID parenthesis_left . params parenthesis_right statement
=======
   23 funDeclaration: typeSpecifier ID '(' . params ')' statement
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    INT   shift, and go to state 2
    REAL  shift, and go to state 3
    BOOL  shift, and go to state 4
    CHAR  shift, and go to state 5

    $default  reduce using rule 26 (params)

    typeSpecifier        go to state 24
    returnTypeSpecifier  go to state 13
    params               go to state 40
    paramList            go to state 26
    paramTypeList        go to state 27


state 30

    8 varDeclaration: typeSpecifier varDeclList semicolon .

    $default  reduce using rule 8 (varDeclaration)


state 31

   10 varDeclList: varDeclList comma . varDeclInitialize

    ID  shift, and go to state 41

    varDeclInitialize  go to state 42
    varDeclId          go to state 22


state 32

   13 varDeclInitialize: varDeclId colon . simpleExpression

<<<<<<< HEAD
    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    simpleExpression     go to state 53
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 59
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 33

<<<<<<< HEAD
    7 recDeclaration: RECORD ID curly_brace_left localDeclarations . curly_brace_right
   41 localDeclarations: localDeclarations . scopedVarDeclaration

    curly_brace_right  shift, and go to state 63
    Static             shift, and go to state 64
    INT                shift, and go to state 2
    REAL               shift, and go to state 3
    BOOL               shift, and go to state 4
    CHAR               shift, and go to state 5

=======
    7 recDeclaration: RECORD ID '{' localDeclarations . '}'
   41 localDeclarations: localDeclarations . scopedVarDeclaration

    Static  shift, and go to state 63
    INT     shift, and go to state 2
    REAL    shift, and go to state 3
    BOOL    shift, and go to state 4
    CHAR    shift, and go to state 5
    '}'     shift, and go to state 64

>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    scopedVarDeclaration  go to state 65
    scopedTypeSpecifier   go to state 66
    typeSpecifier         go to state 67
    returnTypeSpecifier   go to state 13


state 34

   32 paramId: ID .
<<<<<<< HEAD
   33        | ID . square_bracket_left square_bracket_right
=======
   33        | ID . '[' ']'
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    square_bracket_left  shift, and go to state 68

    $default  reduce using rule 32 (paramId)


state 35

   29 paramTypeList: typeSpecifier paramIdList .
<<<<<<< HEAD
   30 paramIdList: paramIdList . comma paramId
=======
   30 paramIdList: paramIdList . ',' paramId
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    comma  shift, and go to state 69

    $default  reduce using rule 29 (paramTypeList)


state 36

   31 paramIdList: paramId .

    $default  reduce using rule 31 (paramIdList)


state 37

<<<<<<< HEAD
   24 funDeclaration: ID parenthesis_left params parenthesis_right . statement

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    curly_brace_left  shift, and go to state 70
    parenthesis_left  shift, and go to state 45
    semicolon         shift, and go to state 71
    NOT               shift, and go to state 46
    IF                shift, and go to state 72
    SWITCH            shift, and go to state 73
    WHILE             shift, and go to state 74
    RETURN            shift, and go to state 75
    BREAK             shift, and go to state 76
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
   24 funDeclaration: ID '(' params ')' . statement

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    IF          shift, and go to state 70
    SWITCH      shift, and go to state 71
    WHILE       shift, and go to state 72
    RETURN      shift, and go to state 73
    BREAK       shift, and go to state 74
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '{'         shift, and go to state 75
    ';'         shift, and go to state 76
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    statement            go to state 77
    compoundStmt         go to state 78
    expressionStmt       go to state 79
    selectionStmt        go to state 80
    iterationStmt        go to state 81
    returnStmt           go to state 82
    breakStmt            go to state 83
    expression           go to state 84
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 38

<<<<<<< HEAD
   27 paramList: paramList semicolon . paramTypeList
=======
   27 paramList: paramList ';' . paramTypeList
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    INT   shift, and go to state 2
    REAL  shift, and go to state 3
    BOOL  shift, and go to state 4
    CHAR  shift, and go to state 5

    typeSpecifier        go to state 24
    returnTypeSpecifier  go to state 13
    paramTypeList        go to state 87


state 39

   15 varDeclId: ID square_bracket_left NUMCONST . square_bracket_right

    square_bracket_right  shift, and go to state 88


state 40

<<<<<<< HEAD
   23 funDeclaration: typeSpecifier ID parenthesis_left params . parenthesis_right statement
=======
   23 funDeclaration: typeSpecifier ID '(' params . ')' statement
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    parenthesis_right  shift, and go to state 89


state 41

   14 varDeclId: ID .
   15          | ID . square_bracket_left NUMCONST square_bracket_right

    square_bracket_left  shift, and go to state 28

    $default  reduce using rule 14 (varDeclId)


state 42

   10 varDeclList: varDeclList comma varDeclInitialize .

    $default  reduce using rule 10 (varDeclList)


state 43

  105 constant: Real_const .

    $default  reduce using rule 105 (constant)


state 44

  107 constant: BoolConst .

    $default  reduce using rule 107 (constant)


state 45

<<<<<<< HEAD
   96 immutable: parenthesis_left . expression parenthesis_right

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
   70 simpleExpression: NOT . simpleExpression

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    expression           go to state 90
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 46

<<<<<<< HEAD
   70 simpleExpression: NOT . simpleExpression

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52

    simpleExpression     go to state 91
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 59
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62
=======
  104 constant: NUMCONST .

    $default  reduce using rule 104 (constant)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 47

<<<<<<< HEAD
   90 unaryop: question_mark .

    $default  reduce using rule 90 (unaryop)
=======
   93 mutable: ID .
   99 call: ID . '(' args ')'

    '('  shift, and go to state 91

    $default  reduce using rule 93 (mutable)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 48

<<<<<<< HEAD
   89 unaryop: multiply .

    $default  reduce using rule 89 (unaryop)
=======
  106 constant: CHARCONST .

    $default  reduce using rule 106 (constant)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 49

<<<<<<< HEAD
   88 unaryop: minus .

    $default  reduce using rule 88 (unaryop)


state 50

  104 constant: NUMCONST .

    $default  reduce using rule 104 (constant)


state 51

   93 mutable: ID .
   99 call: ID . parenthesis_left args parenthesis_right

    parenthesis_left  shift, and go to state 92

    $default  reduce using rule 93 (mutable)


state 52

  106 constant: CHARCONST .

    $default  reduce using rule 106 (constant)
=======
   88 unaryop: '-' .

    $default  reduce using rule 88 (unaryop)


state 50

   89 unaryop: '*' .

    $default  reduce using rule 89 (unaryop)


state 51

   96 immutable: '(' . expression ')'

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52

    expression           go to state 92
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 52

   90 unaryop: '?' .

    $default  reduce using rule 90 (unaryop)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 53

<<<<<<< HEAD
   13 varDeclInitialize: varDeclId colon simpleExpression .
=======
   13 varDeclInitialize: varDeclId ':' simpleExpression .
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
   66 simpleExpression: simpleExpression . OR simpleExpression
   67                 | simpleExpression . AND simpleExpression
   68                 | simpleExpression . OR_ELSE simpleExpression
   69                 | simpleExpression . AND_THEN simpleExpression

    AND_THEN  shift, and go to state 93
    OR_ELSE   shift, and go to state 94
    OR        shift, and go to state 95
    AND       shift, and go to state 96

    $default  reduce using rule 13 (varDeclInitialize)


state 54

   71 simpleExpression: relExpression .

    $default  reduce using rule 71 (simpleExpression)


state 55

   72 relExpression: mathlogicExpression . relop mathlogicExpression
   73              | mathlogicExpression .
<<<<<<< HEAD
   80 mathlogicExpression: mathlogicExpression . plus mathlogicExpression
   81                    | mathlogicExpression . minus mathlogicExpression
   82                    | mathlogicExpression . multiply mathlogicExpression
   83                    | mathlogicExpression . division mathlogicExpression
   84                    | mathlogicExpression . modulo mathlogicExpression
=======
   80 mathlogicExpression: mathlogicExpression . '+' mathlogicExpression
   81                    | mathlogicExpression . '-' mathlogicExpression
   82                    | mathlogicExpression . '*' mathlogicExpression
   83                    | mathlogicExpression . '/' mathlogicExpression
   84                    | mathlogicExpression . '%' mathlogicExpression
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    greater_than   shift, and go to state 97
    greater_equal  shift, and go to state 98
    not_equal      shift, and go to state 99
    equal          shift, and go to state 100
    less_equal     shift, and go to state 101
    less_than      shift, and go to state 102
<<<<<<< HEAD
    modulo         shift, and go to state 103
    division       shift, and go to state 104
    multiply       shift, and go to state 105
    minus          shift, and go to state 106
    plus           shift, and go to state 107
=======
    '+'            shift, and go to state 103
    '-'            shift, and go to state 104
    '%'            shift, and go to state 105
    '*'            shift, and go to state 106
    '/'            shift, and go to state 107
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 73 (relExpression)

    relop  go to state 108


state 56

   85 mathlogicExpression: unaryExpression .

    $default  reduce using rule 85 (mathlogicExpression)


state 57

   86 unaryExpression: unaryop . unaryExpression

<<<<<<< HEAD
    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    unaryExpression  go to state 109
    unaryop          go to state 57
    factor           go to state 58
    mutable          go to state 59
    immutable        go to state 60
    call             go to state 61
    constant         go to state 62


state 58

   87 unaryExpression: factor .

    $default  reduce using rule 87 (unaryExpression)


state 59

   92 factor: mutable .
<<<<<<< HEAD
   94 mutable: mutable . square_bracket_left expression square_bracket_right
   95        | mutable . dot ID

    square_bracket_left  shift, and go to state 110
    dot                  shift, and go to state 111
=======
   94 mutable: mutable . '[' expression ']'
   95        | mutable . '.' ID

    '['  shift, and go to state 110
    '.'  shift, and go to state 111
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 92 (factor)


state 60

   91 factor: immutable .

    $default  reduce using rule 91 (factor)


state 61

   97 immutable: call .

    $default  reduce using rule 97 (immutable)


state 62

   98 immutable: constant .

    $default  reduce using rule 98 (immutable)


state 63

    7 recDeclaration: RECORD ID curly_brace_left localDeclarations curly_brace_right .

    $default  reduce using rule 7 (recDeclaration)


state 64

   16 scopedTypeSpecifier: Static . typeSpecifier

    INT   shift, and go to state 2
    REAL  shift, and go to state 3
    BOOL  shift, and go to state 4
    CHAR  shift, and go to state 5

    typeSpecifier        go to state 112
    returnTypeSpecifier  go to state 13


state 65

   41 localDeclarations: localDeclarations scopedVarDeclaration .

    $default  reduce using rule 41 (localDeclarations)


state 66

    9 scopedVarDeclaration: scopedTypeSpecifier . varDeclList semicolon

    ID  shift, and go to state 41

    varDeclList        go to state 113
    varDeclInitialize  go to state 21
    varDeclId          go to state 22


state 67

   17 scopedTypeSpecifier: typeSpecifier .

    $default  reduce using rule 17 (scopedTypeSpecifier)


state 68

<<<<<<< HEAD
   33 paramId: ID square_bracket_left . square_bracket_right

    square_bracket_right  shift, and go to state 114
=======
   33 paramId: ID '[' . ']'

    ']'  shift, and go to state 114
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 69

<<<<<<< HEAD
   30 paramIdList: paramIdList comma . paramId
=======
   30 paramIdList: paramIdList ',' . paramId
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    ID  shift, and go to state 34

    paramId  go to state 115


state 70

<<<<<<< HEAD
   40 compoundStmt: curly_brace_left . localDeclarations statementList curly_brace_right

    $default  reduce using rule 42 (localDeclarations)

    localDeclarations  go to state 116
=======
   47 selectionStmt: IF . '(' simpleExpression ')' statement
   48              | IF . '(' simpleExpression ')' statement ELSE statement

    '('  shift, and go to state 116
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 71

<<<<<<< HEAD
   46 expressionStmt: semicolon .

    $default  reduce using rule 46 (expressionStmt)
=======
   49 selectionStmt: SWITCH . '(' simpleExpression ')' caseElement defaultElement END

    '('  shift, and go to state 117
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 72

<<<<<<< HEAD
   47 selectionStmt: IF . parenthesis_left simpleExpression parenthesis_right statement
   48              | IF . parenthesis_left simpleExpression parenthesis_right statement ELSE statement

    parenthesis_left  shift, and go to state 117
=======
   54 iterationStmt: WHILE . '(' simpleExpression ')' statement

    '('  shift, and go to state 118
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 73

<<<<<<< HEAD
   49 selectionStmt: SWITCH . parenthesis_left simpleExpression parenthesis_right caseElement defaultElement END

    parenthesis_left  shift, and go to state 118


state 74

   54 iterationStmt: WHILE . parenthesis_left simpleExpression parenthesis_right statement

    parenthesis_left  shift, and go to state 119


state 75

   55 returnStmt: RETURN . semicolon
   56           | RETURN . expression semicolon

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    semicolon         shift, and go to state 120
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52

    expression           go to state 121
=======
   55 returnStmt: RETURN . ';'
   56           | RETURN . expression ';'

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    ';'         shift, and go to state 119
    '('         shift, and go to state 51
    '?'         shift, and go to state 52

    expression           go to state 120
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


<<<<<<< HEAD
state 76

   57 breakStmt: BREAK . semicolon

    semicolon  shift, and go to state 122
=======
state 74

   57 breakStmt: BREAK . ';'

    ';'  shift, and go to state 121


state 75

   40 compoundStmt: '{' . localDeclarations statementList '}'

    $default  reduce using rule 42 (localDeclarations)

    localDeclarations  go to state 122


state 76

   46 expressionStmt: ';' .

    $default  reduce using rule 46 (expressionStmt)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 77

<<<<<<< HEAD
   24 funDeclaration: ID parenthesis_left params parenthesis_right statement .
=======
   24 funDeclaration: ID '(' params ')' statement .
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 24 (funDeclaration)


state 78

   35 statement: compoundStmt .

    $default  reduce using rule 35 (statement)


state 79

   34 statement: expressionStmt .

    $default  reduce using rule 34 (statement)


state 80

   36 statement: selectionStmt .

    $default  reduce using rule 36 (statement)


state 81

   37 statement: iterationStmt .

    $default  reduce using rule 37 (statement)


state 82

   38 statement: returnStmt .

    $default  reduce using rule 38 (statement)


state 83

   39 statement: breakStmt .

    $default  reduce using rule 39 (statement)


state 84

<<<<<<< HEAD
   45 expressionStmt: expression . semicolon

    semicolon  shift, and go to state 123
=======
   45 expressionStmt: expression . ';'

    ';'  shift, and go to state 123
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 85

   65 expression: simpleExpression .
   66 simpleExpression: simpleExpression . OR simpleExpression
   67                 | simpleExpression . AND simpleExpression
   68                 | simpleExpression . OR_ELSE simpleExpression
   69                 | simpleExpression . AND_THEN simpleExpression

    AND_THEN  shift, and go to state 93
    OR_ELSE   shift, and go to state 94
    OR        shift, and go to state 95
    AND       shift, and go to state 96

    $default  reduce using rule 65 (expression)


state 86

<<<<<<< HEAD
   58 expression: mutable . assignment expression
   59           | mutable . plus_assign expression
   60           | mutable . minus_assign expression
   61           | mutable . multiply_assign expression
   62           | mutable . divide_assign expression
   63           | mutable . "++"
   64           | mutable . "--"
   92 factor: mutable .
   94 mutable: mutable . square_bracket_left expression square_bracket_right
   95        | mutable . dot ID

    square_bracket_left  shift, and go to state 110
    dot                  shift, and go to state 111
    plus_assign          shift, and go to state 124
    minus_assign         shift, and go to state 125
    multiply_assign      shift, and go to state 126
    divide_assign        shift, and go to state 127
    assignment           shift, and go to state 128
    "++"                 shift, and go to state 129
    "--"                 shift, and go to state 130
=======
   58 expression: mutable . '=' expression
   59           | mutable . "+=" expression
   60           | mutable . "-=" expression
   61           | mutable . "*=" expression
   62           | mutable . "/=" expression
   63           | mutable . "++"
   64           | mutable . "--"
   92 factor: mutable .
   94 mutable: mutable . '[' expression ']'
   95        | mutable . '.' ID

    '['   shift, and go to state 110
    '='   shift, and go to state 124
    "+="  shift, and go to state 125
    "-="  shift, and go to state 126
    "*="  shift, and go to state 127
    "/="  shift, and go to state 128
    "++"  shift, and go to state 129
    "--"  shift, and go to state 130
    '.'   shift, and go to state 111
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 92 (factor)


state 87

<<<<<<< HEAD
   27 paramList: paramList semicolon paramTypeList .
=======
   27 paramList: paramList ';' paramTypeList .
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 27 (paramList)


state 88

   15 varDeclId: ID square_bracket_left NUMCONST square_bracket_right .

    $default  reduce using rule 15 (varDeclId)


state 89

<<<<<<< HEAD
   23 funDeclaration: typeSpecifier ID parenthesis_left params parenthesis_right . statement

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    curly_brace_left  shift, and go to state 70
    parenthesis_left  shift, and go to state 45
    semicolon         shift, and go to state 71
    NOT               shift, and go to state 46
    IF                shift, and go to state 72
    SWITCH            shift, and go to state 73
    WHILE             shift, and go to state 74
    RETURN            shift, and go to state 75
    BREAK             shift, and go to state 76
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
   23 funDeclaration: typeSpecifier ID '(' params ')' . statement

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    IF          shift, and go to state 70
    SWITCH      shift, and go to state 71
    WHILE       shift, and go to state 72
    RETURN      shift, and go to state 73
    BREAK       shift, and go to state 74
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '{'         shift, and go to state 75
    ';'         shift, and go to state 76
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    statement            go to state 131
    compoundStmt         go to state 78
    expressionStmt       go to state 79
    selectionStmt        go to state 80
    iterationStmt        go to state 81
    returnStmt           go to state 82
    breakStmt            go to state 83
    expression           go to state 84
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 90

<<<<<<< HEAD
   96 immutable: parenthesis_left expression . parenthesis_right

    parenthesis_right  shift, and go to state 132
=======
   66 simpleExpression: simpleExpression . OR simpleExpression
   67                 | simpleExpression . AND simpleExpression
   68                 | simpleExpression . OR_ELSE simpleExpression
   69                 | simpleExpression . AND_THEN simpleExpression
   70                 | NOT simpleExpression .

    $default  reduce using rule 70 (simpleExpression)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 91

<<<<<<< HEAD
   66 simpleExpression: simpleExpression . OR simpleExpression
   67                 | simpleExpression . AND simpleExpression
   68                 | simpleExpression . OR_ELSE simpleExpression
   69                 | simpleExpression . AND_THEN simpleExpression
   70                 | NOT simpleExpression .

    $default  reduce using rule 70 (simpleExpression)


state 92

   99 call: ID parenthesis_left . args parenthesis_right

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52

    $default  reduce using rule 101 (args)

    expression           go to state 133
=======
   99 call: ID '(' . args ')'

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52

    $default  reduce using rule 101 (args)

    expression           go to state 132
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
<<<<<<< HEAD
    args                 go to state 134
    argList              go to state 135
    constant             go to state 62


state 93
=======
    args                 go to state 133
    argList              go to state 134
    constant             go to state 62


state 92

   96 immutable: '(' expression . ')'

    ')'  shift, and go to state 135
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

   69 simpleExpression: simpleExpression AND_THEN . simpleExpression

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52

<<<<<<< HEAD
=======
   69 simpleExpression: simpleExpression AND_THEN . simpleExpression

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52

>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    simpleExpression     go to state 136
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 59
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 94

   68 simpleExpression: simpleExpression OR_ELSE . simpleExpression
<<<<<<< HEAD

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52

=======

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52

>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    simpleExpression     go to state 137
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 59
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 95

   66 simpleExpression: simpleExpression OR . simpleExpression

<<<<<<< HEAD
    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    simpleExpression     go to state 138
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 59
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 96

   67 simpleExpression: simpleExpression AND . simpleExpression

<<<<<<< HEAD
    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    simpleExpression     go to state 139
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 59
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 97

   76 relop: greater_than .

    $default  reduce using rule 76 (relop)


state 98

   77 relop: greater_equal .

    $default  reduce using rule 77 (relop)


state 99

   79 relop: not_equal .

    $default  reduce using rule 79 (relop)


state 100

   78 relop: equal .

    $default  reduce using rule 78 (relop)


state 101

   74 relop: less_equal .

    $default  reduce using rule 74 (relop)


state 102

   75 relop: less_than .

    $default  reduce using rule 75 (relop)


state 103

<<<<<<< HEAD
   84 mathlogicExpression: mathlogicExpression modulo . mathlogicExpression

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
   80 mathlogicExpression: mathlogicExpression '+' . mathlogicExpression

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    mathlogicExpression  go to state 140
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 59
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 104

<<<<<<< HEAD
   83 mathlogicExpression: mathlogicExpression division . mathlogicExpression

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52

=======
   81 mathlogicExpression: mathlogicExpression '-' . mathlogicExpression

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52

>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    mathlogicExpression  go to state 141
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 59
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 105

<<<<<<< HEAD
   82 mathlogicExpression: mathlogicExpression multiply . mathlogicExpression

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52

=======
   84 mathlogicExpression: mathlogicExpression '%' . mathlogicExpression

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52

>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    mathlogicExpression  go to state 142
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 59
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 106

<<<<<<< HEAD
   81 mathlogicExpression: mathlogicExpression minus . mathlogicExpression

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
   82 mathlogicExpression: mathlogicExpression '*' . mathlogicExpression

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    mathlogicExpression  go to state 143
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 59
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 107

<<<<<<< HEAD
   80 mathlogicExpression: mathlogicExpression plus . mathlogicExpression

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
   83 mathlogicExpression: mathlogicExpression '/' . mathlogicExpression

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    mathlogicExpression  go to state 144
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 59
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 108

   72 relExpression: mathlogicExpression relop . mathlogicExpression
<<<<<<< HEAD

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52

=======

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52

>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    mathlogicExpression  go to state 145
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 59
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 109

   86 unaryExpression: unaryop unaryExpression .

    $default  reduce using rule 86 (unaryExpression)

<<<<<<< HEAD

state 110

   94 mutable: mutable square_bracket_left . expression square_bracket_right

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52

=======

state 110

   94 mutable: mutable '[' . expression ']'

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52

>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    expression           go to state 146
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 111

<<<<<<< HEAD
   95 mutable: mutable dot . ID
=======
   95 mutable: mutable '.' . ID
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    ID  shift, and go to state 147


state 112

   16 scopedTypeSpecifier: Static typeSpecifier .

    $default  reduce using rule 16 (scopedTypeSpecifier)


state 113

    9 scopedVarDeclaration: scopedTypeSpecifier varDeclList . semicolon
   10 varDeclList: varDeclList . comma varDeclInitialize

<<<<<<< HEAD
    semicolon  shift, and go to state 148
    comma      shift, and go to state 31
=======
    ';'  shift, and go to state 148
    ','  shift, and go to state 31
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 114

<<<<<<< HEAD
   33 paramId: ID square_bracket_left square_bracket_right .
=======
   33 paramId: ID '[' ']' .
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 33 (paramId)


state 115

<<<<<<< HEAD
   30 paramIdList: paramIdList comma paramId .
=======
   30 paramIdList: paramIdList ',' paramId .
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 30 (paramIdList)


state 116
<<<<<<< HEAD

   40 compoundStmt: curly_brace_left localDeclarations . statementList curly_brace_right
   41 localDeclarations: localDeclarations . scopedVarDeclaration

    Static  shift, and go to state 64
    INT     shift, and go to state 2
    REAL    shift, and go to state 3
    BOOL    shift, and go to state 4
    CHAR    shift, and go to state 5

    $default  reduce using rule 44 (statementList)

    scopedVarDeclaration  go to state 65
    scopedTypeSpecifier   go to state 66
    typeSpecifier         go to state 67
    returnTypeSpecifier   go to state 13
    statementList         go to state 149


state 117

   47 selectionStmt: IF parenthesis_left . simpleExpression parenthesis_right statement
   48              | IF parenthesis_left . simpleExpression parenthesis_right statement ELSE statement

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52

    simpleExpression     go to state 150
=======

   47 selectionStmt: IF '(' . simpleExpression ')' statement
   48              | IF '(' . simpleExpression ')' statement ELSE statement

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52

    simpleExpression     go to state 149
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 59
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


<<<<<<< HEAD
state 118

   49 selectionStmt: SWITCH parenthesis_left . simpleExpression parenthesis_right caseElement defaultElement END

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52

    simpleExpression     go to state 151
=======
state 117

   49 selectionStmt: SWITCH '(' . simpleExpression ')' caseElement defaultElement END

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52

    simpleExpression     go to state 150
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 59
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


<<<<<<< HEAD
state 119

   54 iterationStmt: WHILE parenthesis_left . simpleExpression parenthesis_right statement

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52

    simpleExpression     go to state 152
=======
state 118

   54 iterationStmt: WHILE '(' . simpleExpression ')' statement

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52

    simpleExpression     go to state 151
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 59
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


<<<<<<< HEAD
state 120

   55 returnStmt: RETURN semicolon .

    $default  reduce using rule 55 (returnStmt)
=======
state 119

   55 returnStmt: RETURN ';' .

    $default  reduce using rule 55 (returnStmt)


state 120

   56 returnStmt: RETURN expression . ';'

    ';'  shift, and go to state 152


state 121

   57 breakStmt: BREAK ';' .

    $default  reduce using rule 57 (breakStmt)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 122

<<<<<<< HEAD
   56 returnStmt: RETURN expression . semicolon

    semicolon  shift, and go to state 153
=======
   40 compoundStmt: '{' localDeclarations . statementList '}'
   41 localDeclarations: localDeclarations . scopedVarDeclaration

    Static  shift, and go to state 63
    INT     shift, and go to state 2
    REAL    shift, and go to state 3
    BOOL    shift, and go to state 4
    CHAR    shift, and go to state 5

    $default  reduce using rule 44 (statementList)

    scopedVarDeclaration  go to state 65
    scopedTypeSpecifier   go to state 66
    typeSpecifier         go to state 67
    returnTypeSpecifier   go to state 13
    statementList         go to state 153
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 123

<<<<<<< HEAD
   57 breakStmt: BREAK semicolon .

    $default  reduce using rule 57 (breakStmt)
=======
   45 expressionStmt: expression ';' .

    $default  reduce using rule 45 (expressionStmt)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 124

<<<<<<< HEAD
   45 expressionStmt: expression semicolon .

    $default  reduce using rule 45 (expressionStmt)


state 124

   59 expression: mutable plus_assign . expression

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
   58 expression: mutable '=' . expression

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    expression           go to state 154
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 125

<<<<<<< HEAD
   60 expression: mutable minus_assign . expression

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52

=======
   59 expression: mutable "+=" . expression

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52

>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    expression           go to state 155
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 126

<<<<<<< HEAD
   61 expression: mutable multiply_assign . expression

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52

=======
   60 expression: mutable "-=" . expression

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52

>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    expression           go to state 156
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 127

<<<<<<< HEAD
   62 expression: mutable divide_assign . expression

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
   61 expression: mutable "*=" . expression

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    expression           go to state 157
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 128

<<<<<<< HEAD
   58 expression: mutable assignment . expression

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
   62 expression: mutable "/=" . expression

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    expression           go to state 158
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 129

   63 expression: mutable "++" .

    $default  reduce using rule 63 (expression)


state 130

   64 expression: mutable "--" .

    $default  reduce using rule 64 (expression)


state 131

<<<<<<< HEAD
   23 funDeclaration: typeSpecifier ID parenthesis_left params parenthesis_right statement .
=======
   23 funDeclaration: typeSpecifier ID '(' params ')' statement .
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 23 (funDeclaration)


state 132

<<<<<<< HEAD
   96 immutable: parenthesis_left expression parenthesis_right .

    $default  reduce using rule 96 (immutable)
=======
  103 argList: expression .

    $default  reduce using rule 103 (argList)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 133

<<<<<<< HEAD
  103 argList: expression .

    $default  reduce using rule 103 (argList)
=======
   99 call: ID '(' args . ')'

    ')'  shift, and go to state 159
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 134

<<<<<<< HEAD
   99 call: ID parenthesis_left args . parenthesis_right

    parenthesis_right  shift, and go to state 159
=======
  100 args: argList .
  102 argList: argList . ',' expression

    ','  shift, and go to state 160

    $default  reduce using rule 100 (args)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 135

<<<<<<< HEAD
  100 args: argList .
  102 argList: argList . comma expression

    comma  shift, and go to state 160

    $default  reduce using rule 100 (args)
=======
   96 immutable: '(' expression ')' .

    $default  reduce using rule 96 (immutable)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 136

   66 simpleExpression: simpleExpression . OR simpleExpression
   67                 | simpleExpression . AND simpleExpression
   68                 | simpleExpression . OR_ELSE simpleExpression
   69                 | simpleExpression . AND_THEN simpleExpression
   69                 | simpleExpression AND_THEN simpleExpression .

    $default  reduce using rule 69 (simpleExpression)


state 137

   66 simpleExpression: simpleExpression . OR simpleExpression
   67                 | simpleExpression . AND simpleExpression
   68                 | simpleExpression . OR_ELSE simpleExpression
   68                 | simpleExpression OR_ELSE simpleExpression .
   69                 | simpleExpression . AND_THEN simpleExpression

    AND_THEN  shift, and go to state 93
    AND       shift, and go to state 96

    $default  reduce using rule 68 (simpleExpression)


state 138

   66 simpleExpression: simpleExpression . OR simpleExpression
   66                 | simpleExpression OR simpleExpression .
   67                 | simpleExpression . AND simpleExpression
   68                 | simpleExpression . OR_ELSE simpleExpression
   69                 | simpleExpression . AND_THEN simpleExpression

    AND_THEN  shift, and go to state 93
    AND       shift, and go to state 96

    $default  reduce using rule 66 (simpleExpression)


state 139

   66 simpleExpression: simpleExpression . OR simpleExpression
   67                 | simpleExpression . AND simpleExpression
   67                 | simpleExpression AND simpleExpression .
   68                 | simpleExpression . OR_ELSE simpleExpression
   69                 | simpleExpression . AND_THEN simpleExpression

    $default  reduce using rule 67 (simpleExpression)


state 140

<<<<<<< HEAD
   80 mathlogicExpression: mathlogicExpression . plus mathlogicExpression
   81                    | mathlogicExpression . minus mathlogicExpression
   82                    | mathlogicExpression . multiply mathlogicExpression
   83                    | mathlogicExpression . division mathlogicExpression
   84                    | mathlogicExpression . modulo mathlogicExpression
   84                    | mathlogicExpression modulo mathlogicExpression .

    division  shift, and go to state 104
    multiply  shift, and go to state 105

    $default  reduce using rule 84 (mathlogicExpression)
=======
   80 mathlogicExpression: mathlogicExpression . '+' mathlogicExpression
   80                    | mathlogicExpression '+' mathlogicExpression .
   81                    | mathlogicExpression . '-' mathlogicExpression
   82                    | mathlogicExpression . '*' mathlogicExpression
   83                    | mathlogicExpression . '/' mathlogicExpression
   84                    | mathlogicExpression . '%' mathlogicExpression

    '%'  shift, and go to state 105
    '*'  shift, and go to state 106
    '/'  shift, and go to state 107

    $default  reduce using rule 80 (mathlogicExpression)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 141

<<<<<<< HEAD
   80 mathlogicExpression: mathlogicExpression . plus mathlogicExpression
   81                    | mathlogicExpression . minus mathlogicExpression
   82                    | mathlogicExpression . multiply mathlogicExpression
   83                    | mathlogicExpression . division mathlogicExpression
   83                    | mathlogicExpression division mathlogicExpression .
   84                    | mathlogicExpression . modulo mathlogicExpression

    $default  reduce using rule 83 (mathlogicExpression)
=======
   80 mathlogicExpression: mathlogicExpression . '+' mathlogicExpression
   81                    | mathlogicExpression . '-' mathlogicExpression
   81                    | mathlogicExpression '-' mathlogicExpression .
   82                    | mathlogicExpression . '*' mathlogicExpression
   83                    | mathlogicExpression . '/' mathlogicExpression
   84                    | mathlogicExpression . '%' mathlogicExpression

    '%'  shift, and go to state 105
    '*'  shift, and go to state 106
    '/'  shift, and go to state 107

    $default  reduce using rule 81 (mathlogicExpression)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 142

<<<<<<< HEAD
   80 mathlogicExpression: mathlogicExpression . plus mathlogicExpression
   81                    | mathlogicExpression . minus mathlogicExpression
   82                    | mathlogicExpression . multiply mathlogicExpression
   82                    | mathlogicExpression multiply mathlogicExpression .
   83                    | mathlogicExpression . division mathlogicExpression
   84                    | mathlogicExpression . modulo mathlogicExpression

    $default  reduce using rule 82 (mathlogicExpression)
=======
   80 mathlogicExpression: mathlogicExpression . '+' mathlogicExpression
   81                    | mathlogicExpression . '-' mathlogicExpression
   82                    | mathlogicExpression . '*' mathlogicExpression
   83                    | mathlogicExpression . '/' mathlogicExpression
   84                    | mathlogicExpression . '%' mathlogicExpression
   84                    | mathlogicExpression '%' mathlogicExpression .

    '*'  shift, and go to state 106
    '/'  shift, and go to state 107

    $default  reduce using rule 84 (mathlogicExpression)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 143

<<<<<<< HEAD
   80 mathlogicExpression: mathlogicExpression . plus mathlogicExpression
   81                    | mathlogicExpression . minus mathlogicExpression
   81                    | mathlogicExpression minus mathlogicExpression .
   82                    | mathlogicExpression . multiply mathlogicExpression
   83                    | mathlogicExpression . division mathlogicExpression
   84                    | mathlogicExpression . modulo mathlogicExpression

    modulo    shift, and go to state 103
    division  shift, and go to state 104
    multiply  shift, and go to state 105

    $default  reduce using rule 81 (mathlogicExpression)
=======
   80 mathlogicExpression: mathlogicExpression . '+' mathlogicExpression
   81                    | mathlogicExpression . '-' mathlogicExpression
   82                    | mathlogicExpression . '*' mathlogicExpression
   82                    | mathlogicExpression '*' mathlogicExpression .
   83                    | mathlogicExpression . '/' mathlogicExpression
   84                    | mathlogicExpression . '%' mathlogicExpression

    $default  reduce using rule 82 (mathlogicExpression)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 144

<<<<<<< HEAD
   80 mathlogicExpression: mathlogicExpression . plus mathlogicExpression
   80                    | mathlogicExpression plus mathlogicExpression .
   81                    | mathlogicExpression . minus mathlogicExpression
   82                    | mathlogicExpression . multiply mathlogicExpression
   83                    | mathlogicExpression . division mathlogicExpression
   84                    | mathlogicExpression . modulo mathlogicExpression

    modulo    shift, and go to state 103
    division  shift, and go to state 104
    multiply  shift, and go to state 105

    $default  reduce using rule 80 (mathlogicExpression)
=======
   80 mathlogicExpression: mathlogicExpression . '+' mathlogicExpression
   81                    | mathlogicExpression . '-' mathlogicExpression
   82                    | mathlogicExpression . '*' mathlogicExpression
   83                    | mathlogicExpression . '/' mathlogicExpression
   83                    | mathlogicExpression '/' mathlogicExpression .
   84                    | mathlogicExpression . '%' mathlogicExpression

    $default  reduce using rule 83 (mathlogicExpression)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 145

   72 relExpression: mathlogicExpression relop mathlogicExpression .
<<<<<<< HEAD
   80 mathlogicExpression: mathlogicExpression . plus mathlogicExpression
   81                    | mathlogicExpression . minus mathlogicExpression
   82                    | mathlogicExpression . multiply mathlogicExpression
   83                    | mathlogicExpression . division mathlogicExpression
   84                    | mathlogicExpression . modulo mathlogicExpression

    modulo    shift, and go to state 103
    division  shift, and go to state 104
    multiply  shift, and go to state 105
    minus     shift, and go to state 106
    plus      shift, and go to state 107

=======
   80 mathlogicExpression: mathlogicExpression . '+' mathlogicExpression
   81                    | mathlogicExpression . '-' mathlogicExpression
   82                    | mathlogicExpression . '*' mathlogicExpression
   83                    | mathlogicExpression . '/' mathlogicExpression
   84                    | mathlogicExpression . '%' mathlogicExpression

    '+'  shift, and go to state 103
    '-'  shift, and go to state 104
    '%'  shift, and go to state 105
    '*'  shift, and go to state 106
    '/'  shift, and go to state 107

>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e
    $default  reduce using rule 72 (relExpression)


state 146

<<<<<<< HEAD
   94 mutable: mutable square_bracket_left expression . square_bracket_right

    square_bracket_right  shift, and go to state 161


state 147

   95 mutable: mutable dot ID .

    $default  reduce using rule 95 (mutable)


state 148

    9 scopedVarDeclaration: scopedTypeSpecifier varDeclList semicolon .

    $default  reduce using rule 9 (scopedVarDeclaration)


state 149

   40 compoundStmt: curly_brace_left localDeclarations statementList . curly_brace_right
   43 statementList: statementList . statement

    Real_const         shift, and go to state 43
    BoolConst          shift, and go to state 44
    curly_brace_left   shift, and go to state 70
    curly_brace_right  shift, and go to state 162
    parenthesis_left   shift, and go to state 45
    semicolon          shift, and go to state 71
    NOT                shift, and go to state 46
    IF                 shift, and go to state 72
    SWITCH             shift, and go to state 73
    WHILE              shift, and go to state 74
    RETURN             shift, and go to state 75
    BREAK              shift, and go to state 76
    question_mark      shift, and go to state 47
    multiply           shift, and go to state 48
    minus              shift, and go to state 49
    NUMCONST           shift, and go to state 50
    ID                 shift, and go to state 51
    CHARCONST          shift, and go to state 52

    statement            go to state 163
    compoundStmt         go to state 78
    expressionStmt       go to state 79
    selectionStmt        go to state 80
    iterationStmt        go to state 81
    returnStmt           go to state 82
    breakStmt            go to state 83
    expression           go to state 84
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62
=======
   94 mutable: mutable '[' expression . ']'

    ']'  shift, and go to state 161
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 150

<<<<<<< HEAD
   47 selectionStmt: IF parenthesis_left simpleExpression . parenthesis_right statement
   48              | IF parenthesis_left simpleExpression . parenthesis_right statement ELSE statement
   66 simpleExpression: simpleExpression . OR simpleExpression
   67                 | simpleExpression . AND simpleExpression
   68                 | simpleExpression . OR_ELSE simpleExpression
   69                 | simpleExpression . AND_THEN simpleExpression

    parenthesis_right  shift, and go to state 164
    AND_THEN           shift, and go to state 93
    OR_ELSE            shift, and go to state 94
    OR                 shift, and go to state 95
    AND                shift, and go to state 96
=======
   95 mutable: mutable '.' ID .

    $default  reduce using rule 95 (mutable)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 151

<<<<<<< HEAD
   49 selectionStmt: SWITCH parenthesis_left simpleExpression . parenthesis_right caseElement defaultElement END
   66 simpleExpression: simpleExpression . OR simpleExpression
   67                 | simpleExpression . AND simpleExpression
   68                 | simpleExpression . OR_ELSE simpleExpression
   69                 | simpleExpression . AND_THEN simpleExpression

    parenthesis_right  shift, and go to state 165
    AND_THEN           shift, and go to state 93
    OR_ELSE            shift, and go to state 94
    OR                 shift, and go to state 95
    AND                shift, and go to state 96

=======
    9 scopedVarDeclaration: scopedTypeSpecifier varDeclList ';' .

    $default  reduce using rule 9 (scopedVarDeclaration)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

state 152

   54 iterationStmt: WHILE parenthesis_left simpleExpression . parenthesis_right statement
   66 simpleExpression: simpleExpression . OR simpleExpression
   67                 | simpleExpression . AND simpleExpression
   68                 | simpleExpression . OR_ELSE simpleExpression
   69                 | simpleExpression . AND_THEN simpleExpression

<<<<<<< HEAD
    parenthesis_right  shift, and go to state 166
    AND_THEN           shift, and go to state 93
    OR_ELSE            shift, and go to state 94
    OR                 shift, and go to state 95
    AND                shift, and go to state 96

=======
   47 selectionStmt: IF '(' simpleExpression . ')' statement
   48              | IF '(' simpleExpression . ')' statement ELSE statement
   66 simpleExpression: simpleExpression . OR simpleExpression
   67                 | simpleExpression . AND simpleExpression
   68                 | simpleExpression . OR_ELSE simpleExpression
   69                 | simpleExpression . AND_THEN simpleExpression

    AND_THEN  shift, and go to state 93
    OR_ELSE   shift, and go to state 94
    OR        shift, and go to state 95
    AND       shift, and go to state 96
    ')'       shift, and go to state 162
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

state 153

   56 returnStmt: RETURN expression semicolon .

<<<<<<< HEAD
    $default  reduce using rule 56 (returnStmt)


state 154
=======
   49 selectionStmt: SWITCH '(' simpleExpression . ')' caseElement defaultElement END
   66 simpleExpression: simpleExpression . OR simpleExpression
   67                 | simpleExpression . AND simpleExpression
   68                 | simpleExpression . OR_ELSE simpleExpression
   69                 | simpleExpression . AND_THEN simpleExpression

    AND_THEN  shift, and go to state 93
    OR_ELSE   shift, and go to state 94
    OR        shift, and go to state 95
    AND       shift, and go to state 96
    ')'       shift, and go to state 163
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

   59 expression: mutable plus_assign expression .

    $default  reduce using rule 59 (expression)

<<<<<<< HEAD

state 155
=======
   54 iterationStmt: WHILE '(' simpleExpression . ')' statement
   66 simpleExpression: simpleExpression . OR simpleExpression
   67                 | simpleExpression . AND simpleExpression
   68                 | simpleExpression . OR_ELSE simpleExpression
   69                 | simpleExpression . AND_THEN simpleExpression

    AND_THEN  shift, and go to state 93
    OR_ELSE   shift, and go to state 94
    OR        shift, and go to state 95
    AND       shift, and go to state 96
    ')'       shift, and go to state 164
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

   60 expression: mutable minus_assign expression .

    $default  reduce using rule 60 (expression)

<<<<<<< HEAD

state 156

   61 expression: mutable multiply_assign expression .
=======
   56 returnStmt: RETURN expression ';' .

    $default  reduce using rule 56 (returnStmt)
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 61 (expression)


<<<<<<< HEAD
state 157

   62 expression: mutable divide_assign expression .

    $default  reduce using rule 62 (expression)
=======
   40 compoundStmt: '{' localDeclarations statementList . '}'
   43 statementList: statementList . statement

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    IF          shift, and go to state 70
    SWITCH      shift, and go to state 71
    WHILE       shift, and go to state 72
    RETURN      shift, and go to state 73
    BREAK       shift, and go to state 74
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '{'         shift, and go to state 75
    '}'         shift, and go to state 165
    ';'         shift, and go to state 76
    '('         shift, and go to state 51
    '?'         shift, and go to state 52

    statement            go to state 166
    compoundStmt         go to state 78
    expressionStmt       go to state 79
    selectionStmt        go to state 80
    iterationStmt        go to state 81
    returnStmt           go to state 82
    breakStmt            go to state 83
    expression           go to state 84
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 158

<<<<<<< HEAD
   58 expression: mutable assignment expression .
=======
   58 expression: mutable '=' expression .
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 58 (expression)


state 159

   99 call: ID parenthesis_left args parenthesis_right .

    $default  reduce using rule 99 (call)


state 160

<<<<<<< HEAD
  102 argList: argList comma . expression

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    parenthesis_left  shift, and go to state 45
    NOT               shift, and go to state 46
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
   59 expression: mutable "+=" expression .

    $default  reduce using rule 59 (expression)


state 156

   60 expression: mutable "-=" expression .

    $default  reduce using rule 60 (expression)


state 157

   61 expression: mutable "*=" expression .

    $default  reduce using rule 61 (expression)


state 158

   62 expression: mutable "/=" expression .

    $default  reduce using rule 62 (expression)


state 159

   99 call: ID '(' args ')' .

    $default  reduce using rule 99 (call)


state 160

  102 argList: argList ',' . expression

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    expression           go to state 167
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 161
<<<<<<< HEAD

   94 mutable: mutable square_bracket_left expression square_bracket_right .

    $default  reduce using rule 94 (mutable)


state 162

   40 compoundStmt: curly_brace_left localDeclarations statementList curly_brace_right .

    $default  reduce using rule 40 (compoundStmt)


state 163

   43 statementList: statementList statement .

    $default  reduce using rule 43 (statementList)


state 164

   47 selectionStmt: IF parenthesis_left simpleExpression parenthesis_right . statement
   48              | IF parenthesis_left simpleExpression parenthesis_right . statement ELSE statement

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    curly_brace_left  shift, and go to state 70
    parenthesis_left  shift, and go to state 45
    semicolon         shift, and go to state 71
    NOT               shift, and go to state 46
    IF                shift, and go to state 72
    SWITCH            shift, and go to state 73
    WHILE             shift, and go to state 74
    RETURN            shift, and go to state 75
    BREAK             shift, and go to state 76
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======

   94 mutable: mutable '[' expression ']' .

    $default  reduce using rule 94 (mutable)


state 162

   47 selectionStmt: IF '(' simpleExpression ')' . statement
   48              | IF '(' simpleExpression ')' . statement ELSE statement

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    IF          shift, and go to state 70
    SWITCH      shift, and go to state 71
    WHILE       shift, and go to state 72
    RETURN      shift, and go to state 73
    BREAK       shift, and go to state 74
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '{'         shift, and go to state 75
    ';'         shift, and go to state 76
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    statement            go to state 168
    compoundStmt         go to state 78
    expressionStmt       go to state 79
    selectionStmt        go to state 80
    iterationStmt        go to state 81
    returnStmt           go to state 82
    breakStmt            go to state 83
    expression           go to state 84
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


<<<<<<< HEAD
state 165

   49 selectionStmt: SWITCH parenthesis_left simpleExpression parenthesis_right . caseElement defaultElement END
=======
state 163

   49 selectionStmt: SWITCH '(' simpleExpression ')' . caseElement defaultElement END
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    CASE  shift, and go to state 169

    caseElement  go to state 170


<<<<<<< HEAD
state 166

   54 iterationStmt: WHILE parenthesis_left simpleExpression parenthesis_right . statement

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    curly_brace_left  shift, and go to state 70
    parenthesis_left  shift, and go to state 45
    semicolon         shift, and go to state 71
    NOT               shift, and go to state 46
    IF                shift, and go to state 72
    SWITCH            shift, and go to state 73
    WHILE             shift, and go to state 74
    RETURN            shift, and go to state 75
    BREAK             shift, and go to state 76
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
state 164

   54 iterationStmt: WHILE '(' simpleExpression ')' . statement

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    IF          shift, and go to state 70
    SWITCH      shift, and go to state 71
    WHILE       shift, and go to state 72
    RETURN      shift, and go to state 73
    BREAK       shift, and go to state 74
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '{'         shift, and go to state 75
    ';'         shift, and go to state 76
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    statement            go to state 171
    compoundStmt         go to state 78
    expressionStmt       go to state 79
    selectionStmt        go to state 80
    iterationStmt        go to state 81
    returnStmt           go to state 82
    breakStmt            go to state 83
    expression           go to state 84
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


<<<<<<< HEAD
state 167

  102 argList: argList comma expression .
=======
state 165

   40 compoundStmt: '{' localDeclarations statementList '}' .

    $default  reduce using rule 40 (compoundStmt)


state 166

   43 statementList: statementList statement .

    $default  reduce using rule 43 (statementList)


state 167

  102 argList: argList ',' expression .
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 102 (argList)


state 168

<<<<<<< HEAD
   47 selectionStmt: IF parenthesis_left simpleExpression parenthesis_right statement .
   48              | IF parenthesis_left simpleExpression parenthesis_right statement . ELSE statement
=======
   47 selectionStmt: IF '(' simpleExpression ')' statement .
   48              | IF '(' simpleExpression ')' statement . ELSE statement
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    ELSE  shift, and go to state 172

    $default  reduce using rule 47 (selectionStmt)


state 169

<<<<<<< HEAD
   50 caseElement: CASE . NUMCONST colon statement semicolon
=======
   50 caseElement: CASE . NUMCONST ':' statement ';'
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    NUMCONST  shift, and go to state 173


state 170

<<<<<<< HEAD
   49 selectionStmt: SWITCH parenthesis_left simpleExpression parenthesis_right caseElement . defaultElement END
   51 caseElement: caseElement . CASE NUMCONST colon statement semicolon
=======
   49 selectionStmt: SWITCH '(' simpleExpression ')' caseElement . defaultElement END
   51 caseElement: caseElement . CASE NUMCONST ':' statement ';'
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    CASE     shift, and go to state 174
    DEFAULT  shift, and go to state 175

    $default  reduce using rule 53 (defaultElement)

    defaultElement  go to state 176


state 171

<<<<<<< HEAD
   54 iterationStmt: WHILE parenthesis_left simpleExpression parenthesis_right statement .
=======
   54 iterationStmt: WHILE '(' simpleExpression ')' statement .
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 54 (iterationStmt)


state 172

<<<<<<< HEAD
   48 selectionStmt: IF parenthesis_left simpleExpression parenthesis_right statement ELSE . statement

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    curly_brace_left  shift, and go to state 70
    parenthesis_left  shift, and go to state 45
    semicolon         shift, and go to state 71
    NOT               shift, and go to state 46
    IF                shift, and go to state 72
    SWITCH            shift, and go to state 73
    WHILE             shift, and go to state 74
    RETURN            shift, and go to state 75
    BREAK             shift, and go to state 76
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
   48 selectionStmt: IF '(' simpleExpression ')' statement ELSE . statement

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    IF          shift, and go to state 70
    SWITCH      shift, and go to state 71
    WHILE       shift, and go to state 72
    RETURN      shift, and go to state 73
    BREAK       shift, and go to state 74
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '{'         shift, and go to state 75
    ';'         shift, and go to state 76
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    statement            go to state 177
    compoundStmt         go to state 78
    expressionStmt       go to state 79
    selectionStmt        go to state 80
    iterationStmt        go to state 81
    returnStmt           go to state 82
    breakStmt            go to state 83
    expression           go to state 84
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 173

<<<<<<< HEAD
   50 caseElement: CASE NUMCONST . colon statement semicolon

    colon  shift, and go to state 178
=======
   50 caseElement: CASE NUMCONST . ':' statement ';'

    ':'  shift, and go to state 178
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 174

<<<<<<< HEAD
   51 caseElement: caseElement CASE . NUMCONST colon statement semicolon
=======
   51 caseElement: caseElement CASE . NUMCONST ':' statement ';'
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    NUMCONST  shift, and go to state 179


state 175

<<<<<<< HEAD
   52 defaultElement: DEFAULT . colon statement semicolon

    colon  shift, and go to state 180
=======
   52 defaultElement: DEFAULT . ':' statement ';'

    ':'  shift, and go to state 180
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 176

<<<<<<< HEAD
   49 selectionStmt: SWITCH parenthesis_left simpleExpression parenthesis_right caseElement defaultElement . END
=======
   49 selectionStmt: SWITCH '(' simpleExpression ')' caseElement defaultElement . END
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    END  shift, and go to state 181


state 177

<<<<<<< HEAD
   48 selectionStmt: IF parenthesis_left simpleExpression parenthesis_right statement ELSE statement .
=======
   48 selectionStmt: IF '(' simpleExpression ')' statement ELSE statement .
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 48 (selectionStmt)


state 178

<<<<<<< HEAD
   50 caseElement: CASE NUMCONST colon . statement semicolon

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    curly_brace_left  shift, and go to state 70
    parenthesis_left  shift, and go to state 45
    semicolon         shift, and go to state 71
    NOT               shift, and go to state 46
    IF                shift, and go to state 72
    SWITCH            shift, and go to state 73
    WHILE             shift, and go to state 74
    RETURN            shift, and go to state 75
    BREAK             shift, and go to state 76
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
   50 caseElement: CASE NUMCONST ':' . statement ';'

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    IF          shift, and go to state 70
    SWITCH      shift, and go to state 71
    WHILE       shift, and go to state 72
    RETURN      shift, and go to state 73
    BREAK       shift, and go to state 74
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '{'         shift, and go to state 75
    ';'         shift, and go to state 76
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    statement            go to state 182
    compoundStmt         go to state 78
    expressionStmt       go to state 79
    selectionStmt        go to state 80
    iterationStmt        go to state 81
    returnStmt           go to state 82
    breakStmt            go to state 83
    expression           go to state 84
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 179

<<<<<<< HEAD
   51 caseElement: caseElement CASE NUMCONST . colon statement semicolon

    colon  shift, and go to state 183
=======
   51 caseElement: caseElement CASE NUMCONST . ':' statement ';'

    ':'  shift, and go to state 183
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 180

<<<<<<< HEAD
   52 defaultElement: DEFAULT colon . statement semicolon

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    curly_brace_left  shift, and go to state 70
    parenthesis_left  shift, and go to state 45
    semicolon         shift, and go to state 71
    NOT               shift, and go to state 46
    IF                shift, and go to state 72
    SWITCH            shift, and go to state 73
    WHILE             shift, and go to state 74
    RETURN            shift, and go to state 75
    BREAK             shift, and go to state 76
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
   52 defaultElement: DEFAULT ':' . statement ';'

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    IF          shift, and go to state 70
    SWITCH      shift, and go to state 71
    WHILE       shift, and go to state 72
    RETURN      shift, and go to state 73
    BREAK       shift, and go to state 74
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '{'         shift, and go to state 75
    ';'         shift, and go to state 76
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    statement            go to state 184
    compoundStmt         go to state 78
    expressionStmt       go to state 79
    selectionStmt        go to state 80
    iterationStmt        go to state 81
    returnStmt           go to state 82
    breakStmt            go to state 83
    expression           go to state 84
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 181

<<<<<<< HEAD
   49 selectionStmt: SWITCH parenthesis_left simpleExpression parenthesis_right caseElement defaultElement END .
=======
   49 selectionStmt: SWITCH '(' simpleExpression ')' caseElement defaultElement END .
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 49 (selectionStmt)


state 182

<<<<<<< HEAD
   50 caseElement: CASE NUMCONST colon statement . semicolon

    semicolon  shift, and go to state 185
=======
   50 caseElement: CASE NUMCONST ':' statement . ';'

    ';'  shift, and go to state 185
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 183

<<<<<<< HEAD
   51 caseElement: caseElement CASE NUMCONST colon . statement semicolon

    Real_const        shift, and go to state 43
    BoolConst         shift, and go to state 44
    curly_brace_left  shift, and go to state 70
    parenthesis_left  shift, and go to state 45
    semicolon         shift, and go to state 71
    NOT               shift, and go to state 46
    IF                shift, and go to state 72
    SWITCH            shift, and go to state 73
    WHILE             shift, and go to state 74
    RETURN            shift, and go to state 75
    BREAK             shift, and go to state 76
    question_mark     shift, and go to state 47
    multiply          shift, and go to state 48
    minus             shift, and go to state 49
    NUMCONST          shift, and go to state 50
    ID                shift, and go to state 51
    CHARCONST         shift, and go to state 52
=======
   51 caseElement: caseElement CASE NUMCONST ':' . statement ';'

    Real_const  shift, and go to state 43
    BoolConst   shift, and go to state 44
    NOT         shift, and go to state 45
    IF          shift, and go to state 70
    SWITCH      shift, and go to state 71
    WHILE       shift, and go to state 72
    RETURN      shift, and go to state 73
    BREAK       shift, and go to state 74
    NUMCONST    shift, and go to state 46
    ID          shift, and go to state 47
    CHARCONST   shift, and go to state 48
    '-'         shift, and go to state 49
    '*'         shift, and go to state 50
    '{'         shift, and go to state 75
    ';'         shift, and go to state 76
    '('         shift, and go to state 51
    '?'         shift, and go to state 52
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    statement            go to state 186
    compoundStmt         go to state 78
    expressionStmt       go to state 79
    selectionStmt        go to state 80
    iterationStmt        go to state 81
    returnStmt           go to state 82
    breakStmt            go to state 83
    expression           go to state 84
    simpleExpression     go to state 85
    relExpression        go to state 54
    mathlogicExpression  go to state 55
    unaryExpression      go to state 56
    unaryop              go to state 57
    factor               go to state 58
    mutable              go to state 86
    immutable            go to state 60
    call                 go to state 61
    constant             go to state 62


state 184

<<<<<<< HEAD
   52 defaultElement: DEFAULT colon statement . semicolon

    semicolon  shift, and go to state 187
=======
   52 defaultElement: DEFAULT ':' statement . ';'

    ';'  shift, and go to state 187
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 185

<<<<<<< HEAD
   50 caseElement: CASE NUMCONST colon statement semicolon .
=======
   50 caseElement: CASE NUMCONST ':' statement ';' .
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 50 (caseElement)


state 186

<<<<<<< HEAD
   51 caseElement: caseElement CASE NUMCONST colon statement . semicolon

    semicolon  shift, and go to state 188
=======
   51 caseElement: caseElement CASE NUMCONST ':' statement . ';'

    ';'  shift, and go to state 188
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e


state 187

<<<<<<< HEAD
   52 defaultElement: DEFAULT colon statement semicolon .
=======
   52 defaultElement: DEFAULT ':' statement ';' .
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 52 (defaultElement)


state 188

<<<<<<< HEAD
   51 caseElement: caseElement CASE NUMCONST colon statement semicolon .
=======
   51 caseElement: caseElement CASE NUMCONST ':' statement ';' .
>>>>>>> 0d4218834c01dcf4c87a748573f5ca5b3b43b58e

    $default  reduce using rule 51 (caseElement)
